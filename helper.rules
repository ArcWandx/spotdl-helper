# Options: merge, new
# new: Creates a new directory containing the downloaded playlist
# merge: Merges a new playlist download with already downloaded songs
MODE=new

# Format for the file names; syntax is that of spotdl (`spotdl -h | grep -A 10 -- --output`)
# OUTPUT-FORMAT={title} - {artists}

# The url of the new playlist. The playlist must be public
URL=

# The directory to put the songs in. For MODE=merge, this
# is the directory that contains songs already
DIR=./test

# Whether or not to use mp3gain
# MP3GAIN=True

# Comma separated list of spotify urls where we should ignore
# differences in the title and artist from the title and artist
# of the youtube video.
IGNORE-MISMATCH=[
]

# Manual song replacements
# Comma separated list, where each entry is of the form
# youtube_link | spotify_link
REPLACE=[
]
# Buffer for manual songs
# MANUAL-BUFFER=./tmp_manual

# Determines how strictly duplicates are checked for when merging
# 0: Don't check for duplicates. May result in overwriting
# 1: Don't overwrite duplicates.
# 2: Overwrite duplicates with newer file.
# 3: (default) Queue duplicates for manual handling.
# DUP-SCAN-LEVEL=3

# Determines how strict verification is. Files that fail verification
# will be queued for manual review.
# 0: Don't do any verification
# 1: (default) Make sure title and artist match.
# 2: Make sure title, artist, and album match.
# 3: Make sure title and artist match. Automatically fails if not from youtube music.
# 4: Make sure title, artist, and album match. Automatically fails if not from youtube music.
# VERIFY-LEVEL=1

# Integer value describing what steps to skip
# Each value also skips all actions prior.
# 0: Run normally
# 1: Don't download again (may want to set BUFFER)
# 2: Don't do manual replacing
# 3: Don't do verification
# 4: Skip removing the spotify ids
# 5: Don't check for duplicates
# 6: Don't move to the main directory or remove buffers
# 6: Do nothing
# SKIP=0

# The buffer used to store downloaded songs before moving into DIR
# BUFFER=./tmp_dlbuf

